{
    name: release,
    on: { push: { branches: [main] } },
    permissions: { contents: write, packages: write },
    env: { GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}" },
    jobs:
        {
            setup:
                {
                    runs-on: ubuntu-latest,
                    steps:
                        [
                            { uses: actions/checkout@v3 },
                            { id: setup-go, uses: actions/setup-go@v4 },
                            { id: download-go-deps, run: go mod download },
                            {
                                id: build,
                                run: "${{ github.workspace }}/prebuild.sh ${{ github.workspace }}/cmd linux amd64",
                            },
                            {
                                id: artifact,
                                uses: actions/upload-artifact@v3,
                                with:
                                    {
                                        name: buildrc-override,
                                        path: linux-amd64,
                                    },
                            },
                        ],
                },
            finish:
                {
                    runs-on: ubuntu-latest,
                    needs: [setup],
                    env: { DOCKERFILE: "./Dockerfile" },
                    steps:
                        [
                            { uses: actions/checkout@v3 },
                            { name: qmeu, uses: "docker/setup-qemu-action@v2" },
                            {
                                id: "buildx",
                                uses: docker/setup-buildx-action@v2,
                            },
                            {
                                name: Cache Docker layers,
                                uses: actions/cache@v3,
                                with:
                                    {
                                        path: "/tmp/.buildx-cache",
                                        key: "${{ runner.os }}-buildx-${{ github.sha }}",
                                        restore-keys: "${{ runner.os }}-buildx-",
                                    },
                            },
                            { uses: actions/checkout@v3 },
                            {
                                name: Generate Docker metadata,
                                id: meta,
                                uses: docker/metadata-action@v4,
                                with:
                                    {
                                        images: "ghcr.io/${{ github.repository }}:${{ env.BUILDRC_NEXT-TAG_FULL  }}",
                                        github-token: "${{ secrets.GITHUB_TOKEN }}",
                                        labels: "org.opencontainers.image.title=${{ env.BUILDRC_NEXT-TAG_FULL }}\norg.opencontainers.image.source=${{ github.event.organization.avatar_url }}",
                                        tags: "type=ref,event=branch\ntype=semver,pattern=v{{version}},value=${{ env.BUILDRC_NEXT-TAG_FULL }}\ntype=sha\ntype=raw,value=latest,enable=${{ endsWith(github.ref, '/main') }}\ntype=semver,pattern=v{{major}}.{{minor}},value=${{ env.BUILDRC_NEXT-TAG_FULL }},enable=${{ endsWith(github.ref, '/main') }}\ntype=semver,pattern=v{{major}},value=${{ env.BUILDRC_NEXT-TAG_FULL }},enable=${{ endsWith(github.ref, '/main') }}",
                                    },
                            },
                            { id: setup-go, uses: actions/setup-go@v4 },
                            {
                                id: setup-buildrc,
                                uses: nuggxyz/actions/setup-buildrc@main,
                            },
                            { id: pre-build, run: "buildrc hook prebuild" },
                            {
                                name: "build image",
                                id: "build-image",
                                uses: "docker/build-push-action@v4",
                                with:
                                    {
                                        context: ".",
                                        file: "./${{ env.DOCKERFILE }}",
                                        build-args: "ENTRY=${{ env.BUILDRC_LOAD_ENTRY }}",
                                        push: true,
                                        tags: "${{ steps.meta.outputs.tags }}",
                                        labels: "${{ steps.meta.outputs.labels }}",
                                        cache-from: "type=local,src=/tmp/.buildx-cache",
                                        cache-to: "type=local,dest=/tmp/.buildx-cache,mode=max",
                                        platforms: "${{ env.BUILDRC_LOAD_PLATFORMS }}",
                                        github-token: "${{ secrets.GITHUB_TOKEN }}",
                                    },
                            },
                            {
                                name: Create GitHub Release,
                                uses: ncipollo/release-action@v1,
                                with:
                                    {
                                        tag: "v${{ env.TAG }}",
                                        name: "${{ env.TAG }}",
                                        body: "Auto-generated release for ${{ env.TAG }}",
                                        draft: false,
                                        prerelease: "${{ github.ref != 'refs/heads/main' }}",
                                        commit: "${{ github.sha }}",
                                        allowUpdates: true,
                                    },
                            },
                        ],
                },
        },
}
