{
    name: release,
    on:
        {
            push: { branches: ["*"] },
            pull_request: { types: [ready_for_review, converted_to_draft] },
        },
    permissions:
        {
            id-token: write,
            contents: write,
            packages: write,
            actions: write,
            deployments: write,
            pull-requests: write,
            issues: write,
            statuses: write,
            checks: write,
        },
    env: { GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}" },
    jobs:
        {
            setup:
                {
                    runs-on: ubuntu-latest,
                    if: "${{ github.event_name == 'push' }}",
                    outputs:
                        {
                            BUILDRC_LOAD_PACKAGE_NAMES_ARRAY: "${{ env.BUILDRC_LOAD_PACKAGE_NAMES_ARRAY }}",
                        },
                    steps:
                        [
                            { uses: actions/checkout@v3 },
                            { id: setup-go, uses: actions/setup-go@v4 },
                            { id: download-go-deps, run: go mod download },
                            {
                                id: build-linux-amd64,
                                run: "${{ github.workspace }}/build.sh linux amd64 ./build/linux-amd64",
                            },
                            {
                                id: artifact,
                                uses: actions/upload-artifact@v3,
                                with:
                                    {
                                        name: buildrc-override,
                                        path: "${{ github.workspace }}/build/linux-amd64",
                                    },
                            },
                            {
                                id: setup-buildrc,
                                uses: nuggxyz/actions/setup-buildrc@0.0.9,
                            },
                        ],
                },
            build:
                {
                    runs-on: ubuntu-latest,
                    needs: [setup],
                    if: "${{ github.event_name == 'push' }}",
                    strategy:
                        {
                            matrix:
                                {
                                    package: "${{ fromJson(needs.setup.outputs.BUILDRC_LOAD_PACKAGE_NAMES_ARRAY) }}",
                                },
                        },
                    steps:
                        [
                            { uses: actions/checkout@v3 },
                            {
                                id: setup-buildrc,
                                uses: nuggxyz/actions/setup-buildrc@main,
                            },
                            {
                                id: load-package,
                                run: "buildrc package ${{ matrix.package }}",
                            },
                            {
                                id: setup-go,
                                if: "${{env.BUILDRC_PACKAGE_USES_GO == '1'}}",
                                uses: actions/setup-go@v4,
                            },
                            {
                                name: Set env variables,
                                uses: actions/github-script@v6,
                                with:
                                    {
                                        script: "const fs = require('fs'); fs.appendFileSync(process.env.GITHUB_ENV, `ACTIONS_RUNTIME_TOKEN=${process.env.ACTIONS_RUNTIME_TOKEN}\n`); fs.appendFileSync(process.env.GITHUB_ENV, `ACTIONS_RUNTIME_URL=${process.env.ACTIONS_RUNTIME_URL}\n`);",
                                        result-encoding: string,
                                    },
                            },
                            { id: build, run: "buildrc build" },
                        ],
                },
            sync:
                {
                    runs-on: ubuntu-latest,
                    needs: [build],
                    steps:
                        [
                            { uses: actions/checkout@v3 },
                            {
                                id: setup-buildrc,
                                uses: nuggxyz/actions/setup-buildrc@main,
                            },
                            { id: pre-release, run: "buildrc release" },
                        ],
                },
        },
}
